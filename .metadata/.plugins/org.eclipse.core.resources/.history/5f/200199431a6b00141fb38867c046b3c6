package sent_dedector;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Set;
import stemmer.Stemmer;

public class dict_test {
	public static void main(String[] args) throws IOException {
		 String inputpath1="/home/ranger/Desktop/twitter/data/tweets_positive emotions.txt";
		 String inputpath2="/home/ranger/Desktop/twitter/data/negative_emotions.txt";
		 Stemmer stemmer = new Stemmer();
		 HashMap<String,Integer> positive= new HashMap<String,Integer>();
		 HashMap<String,Integer> negative= new HashMap<String,Integer>();
		 HashMap<String,Double> dict1= new HashMap<String,Double>();
		 BufferedReader reader1 = new BufferedReader(new FileReader(inputpath1));
		 BufferedReader reader2 = new BufferedReader(new FileReader(inputpath2));

		 String line = null;
		 String[] parts;
		 while ((line = reader1.readLine()) != null)
		 {
			line = line.replaceAll("(!|,|\\.|\\?)", "");
			parts = line.split("\\s");
			for(int i=0;i<parts.length;i++)
			{
				String temp=stemmer.stem(parts[i]);
				if(temp.length()>=3)
				{
					if(positive.containsKey(temp))
					{
						positive.put(temp, positive.get(temp)+1);
					}
					else
					{
						positive.put(temp,1);
					}
				}
			}
		}

		//Negative tweets Sentiments calculation

		 while ((line = reader2.readLine()) != null)
		 {
			line = line.replaceAll("(!|,|\\.|\\?)", "");
			
			parts = line.split("\\s");
			for(int i=0;i<parts.length;i++)
			{
				String temp=stemmer.stem(parts[i]);
				if(temp.length()>=3)
				{
					if(negative.containsKey(temp))
					{
						negative.put(temp, negative.get(temp)+1);
					}
					else
					{
						negative.put(temp,1);
					}
				}
			}
		}
		 
		 Set<String> keys = positive.keySet();
	        for(String key: keys)
	        {
	        	if(negative.containsKey(key))
	        	{
	        		//System.out.println(positive.get(key)+ " and "+ negative.get(key));
	        		double pos=positive.get(key);
	        		double neg=negative.get(key);
	        		double polar=(pos-neg)/(pos+ neg);
	        		//System.out.println(key+ ": "+polar);
	        		dict1.put(key, polar);
	        	}
	        	else
	        	{
	        		dict1.put(key, 1.0);
	        	}
	        	//System.out.println(key + " : "+positive.get(key));
	        }
	     Set<String> keys2 = negative.keySet();
	        for(String key1: keys2)
	        {
	        	if(!positive.containsKey(key1))
	        	{
	        		dict1.put(key1, -1.0);
	        	}
	        }
	        Set<String> keys3 = dict1.keySet();
	        for(String key2: keys3)
	        {
	        	System.out.println(key2 + " : "+dict1.get(key2));
	        }
	}
}
